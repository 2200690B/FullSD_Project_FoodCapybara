@page "/ordersindex/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize(Roles = "Administrator")]

<h3 class="card-title">Order</h3>

<a href="/orders/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Order
</a>
<br />
<br />

@* OrderID (PK)
CustID (FK)
StaffID(FK)
OrderPrice
OrderDate
OrderStatus *@

@if (Orders == null)
{
<div class="alert alert-info">Loading Orders...</div>
}
else
{
<table class="table table-responsive">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Staff</th> 
            <th>Order Price</th>
            <th>Order Date</th>
            <th>Order Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Orders)
        {
            <tr>
                <td>@order.Customer.FirstName</td>
                <td>@order.Staff.FirstName</td> 
                <td>@order.OrderPrice</td>
                <td>@order.OrderDate</td>
                <td>@order.OrderStatus</td>
                <td>
                    <a href="/orders/view/@order.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a><!-- View -->
                    <a href="/orders/edit/@order.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a><!-- Edit -->
                    <button class="btn btn-danger" @onclick="@(()=>Delete(order.Id))">
                        <span class="oi oi-delete"></span>
                    </button> <!-- Delete -->
                </td>
            </tr>
        }
    </tbody>
</table>
}


@code {
    private List<Order>? Orders;

    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}");
    }

    async Task Delete(int orderId)
    {
        if (Orders != null)
        {
            var order = Orders.First(q => q.Id == orderId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {order.Id}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.OrdersEndpoint}/{orderId}");
                await OnInitializedAsync();
            }
        }
    }
}