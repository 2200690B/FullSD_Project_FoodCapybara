@inject HttpClient _client

<EditForm Model="@food" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
    <div class="form-group">
            <label>Restaurant: </label>
            <div>
                <InputSelect @bind-Value="food.RestId" class="form-control">
                    <option value="">-- Select Restaurant --</option>
                    @if (Restaurants != null)
                    {
                        foreach (var restaurant in Restaurants)
                        {
                            <option value="@restaurant.Id">@restaurant.RestName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => food.RestId)" />
            </div>
        </div>

    <div class="form-group">
        <label>FoodName: </label>
        <div>
            <InputText @bind-Value="@food.FoodName" class="form-control" />
            <ValidationMessage For="@(() => food.FoodName)" />
        </div>
    </div>

    <div class="form-group">
        <label>FoodRating: </label>
        <div>
            <InputNumber @bind-Value="@food.FoodRating" class="form-control" />
            <ValidationMessage For="@(() => food.FoodRating)" />
        </div>
    </div>

    <div class="form-group">
        <label>FoodDesc: </label>
        <div>
            <InputText @bind-Value="@food.FoodDesc" class="form-control" />
            <ValidationMessage For="@(() => food.FoodDesc)" />
        </div>
    </div>

    <div class="form-group">
        <label>FoodCost: </label>
        <div>
            <InputNumber @bind-Value="@food.FoodCost" class="form-control" />
            <ValidationMessage For="@(() => food.FoodCost)" />
        </div>
    </div>
    </fieldset>

    <br />

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="foodsindex" />
    <br />

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Food food { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Restaurant>? Restaurants;

    protected async override Task OnInitializedAsync()
    {
        Restaurants = await _client.GetFromJsonAsync<List<Restaurant>>($"{Endpoints.RestaurantsEndpoint}");
    }
}